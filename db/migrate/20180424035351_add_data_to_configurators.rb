class AddDataToConfigurators < ActiveRecord::Migration[5.0]
  def change
    new_conf_sequence = [{request_type: "change_time_check_in", value: "8", conf_type: "string",display_name: "A change request has to be placed at least X hours before the Shift Time for Login. X is -"},
      {request_type: "change_time_check_out", value: "4", conf_type: "string",display_name: "A change request has to be placed at least Y hours before the Shift Time for Logout. Y is -"},
      {request_type: "change_request_approved_by", value: "No Approval Required", conf_type: "dropdown",display_name: "A Change Request has to be approved by", options: ["By Line Manager Only","By Transport Desk Only","By Line Manager or Transport Desk","No Approval is required"]},
      {request_type: "consider_non_compliant_cancel_as_no_show", value: "1", conf_type: "boolean",display_name: "In case of a non-compliant cancellation the Employee is considered a No Show?"},
      {request_type: "cancel_time_check_in", value: "4", conf_type: "string",display_name: "A cancel request has to be placed at least X hours before the Shift Time for Login. X is:"},
      {request_type: "cancel_time_check_out", value: "0.5", conf_type: "string",display_name: "A cancel request has to be placed at least Y hours before the Shift Time for Logout. Y is:"},
      {request_type: "no_show_approval_required", value: "0", conf_type: "boolean",display_name: "An Employee No Show requires an approval?"},
      {request_type: "driver_no_show_allowed_D2D", value: "1", conf_type: "boolean",display_name: "Driver No Show Allowed?"},
      {request_type: "passcode_required_driver_check_in_D2D", value: "0", conf_type: "boolean",display_name: "Passcode required by Driver to Check in?"},
      {request_type: "employee_check_in_allowed_D2D", value: "0", conf_type: "boolean",display_name: "Employee Check in Allowed?"},
      {request_type: "employee_no_show_allowed_D2D", value: "0", conf_type: "boolean",display_name: "Employee No Show Allowed?"},
      {request_type: "move_to_next_step_required_D2D", value: "0", conf_type: "boolean",display_name: "Move to next step required?"},
      {request_type: "wait_time_at_pickup_D2D", value: "10", conf_type: "string",display_name: "Wait time at Pickup(in minutes)"},
      {request_type: "driver_no_show_allowed_NODAL", value: "1", conf_type: "boolean",display_name: "Driver No Show Allowed?"},
      {request_type: "passcode_required_driver_check_in_NODAL", value: "0", conf_type: "boolean",display_name: "Passcode required by Driver to Check in?"},
      {request_type: "employee_check_in_allowed_NODAL", value: "0", conf_type: "boolean",display_name: "Employee Check in Allowed?"},
      {request_type: "employee_no_show_allowed_NODAL", value: "0", conf_type: "boolean",display_name: "Employee No Show Allowed?"},
      {request_type: "move_to_next_step_required_NODAL", value: "0", conf_type: "boolean",display_name: "Move to next step required?"},
      {request_type: "wait_time_at_pickup_NODAL", value: "10", conf_type: "string",display_name: "Wait time at Pickup(in minutes)"},
      {request_type: "start_time_NODAL", value: "06:00", conf_type: "time",display_name: "Start time for Nodal Pickups"},
      {request_type: "end_time_NODAL", value: "20:30", conf_type: "time",display_name: "End Time for Nodal Pickups"},
      {request_type: "is_nodal_trip_allowed", value: "0", conf_type: "boolean",display_name: "Is Nodal Trip Allowed?"},
      {request_type: "driver_no_show_allowed_BUS", value: "0", conf_type: "boolean",display_name: "Driver No Show Allowed?"},
      {request_type: "passcode_required_driver_check_in_BUS", value: "1", conf_type: "boolean",display_name: "Passcode required by Driver to Check in?"},
      {request_type: "employee_check_in_allowed_BUS", value: "1", conf_type: "boolean",display_name: "Employee Check in Allowed?"},
      {request_type: "employee_no_show_allowed_BUS", value: "1", conf_type: "boolean",display_name: "Employee No Show Allowed?"},
      {request_type: "move_to_next_step_required_BUS", value: "1", conf_type: "boolean",display_name: "Move to next step required?"},
      {request_type: "wait_time_at_pick_BUS", value: "10", conf_type: "string",display_name: "Wait time at Pickup(in minutes)"},
      {request_type: "report_time_check_in", value: "10", conf_type: "string",display_name: "Employees should report to Office X minutes before the Shift start time. X is:"},
      {request_type: "report_time_delay_check_in", value: "10", conf_type: "string",display_name: "An Arrival, Y minutes beyond the Shift Start Time is considered a delay. Y is:"},
      {request_type: "departure_time_check_out", value: "10", conf_type: "string",display_name: "Employees should depart from the Office within Y minutes of the Shift End Time. Y is:"},
      {request_type: "female_exception_required", value: "1", conf_type: "boolean",display_name: "Enforce Female First / Last Exception Policy"},
      {request_type: "female_exception_check_in_time", value: "06:00", conf_type: "time",display_name: "Start Time"},
      {request_type: "female_exception_check_out_time", value: "20:30", conf_type: "time",display_name: "End Time"},
      {request_type: "female_exception_resequence_required", value: "1", conf_type: "boolean",display_name: "Manage Female First / Last Exception by Re-sequencing?"},
      {request_type: "female_exception_aerial_distance", value: "1.5", conf_type: "string",display_name: "Max aerial distance (in Kms)"},
      {request_type: "speed_limit", value: "60", conf_type: "string",display_name: "Speed Limit (in Km/Hr)"},
      {request_type: "speed_limit_violation_time", value: "30", conf_type: "string",display_name: "Consider a Speed Violation if the Driver stays at the Speed Limit for at least X seconds. X is:"},
      {request_type: "max_allowed_distance_trip", value: "45", conf_type: "string",display_name: "Max Distance allowed for a Trip"},
      {request_type: "handle_max_distance_violation_trip", value: "Give a Warning", conf_type: "string",display_name: "What do when Max Distance Policy is violated?", options: ["Give a Warning","Strictily don't allow these trips"]},
      {request_type: "max_duration_allowed_trip", value: "90", conf_type: "string",display_name: "Max Duration allowed for a Trip"},
      {request_type: "handle_max_duration_violation_trip", value: "Give a Warning", conf_type: "string",display_name: "What do when Max Duration Policy is violated?", options: ["Give a Warning","Strictily don't allow these trips"]},
      {request_type: "buffer_duration_for_start_trip_notification", value: "30", conf_type: "string",display_name: "Buffer time before which a driver should be notified to start a trip in minutes"},
      {request_type: "buffer_duration_for_delayed_trip_notification", value: "30", conf_type: "string",display_name: "Buffer time after which operator should be notified of delayed trip in minutes"},
      {request_type: "buffer_duration_to_allow_start_trip", value: "120", conf_type: "string",display_name: "Duration before first pickup after which start trip will be enabled in minutes"},
      {request_type: "min_distance_to_calc_start_trip_eta", value: "500", conf_type: "string",display_name: "Minimum distance to be travelled by Driver before re-calculating start trip ETA"},
      {request_type: "max_time_to_calc_start_trip_eta", value: "180", conf_type: "string",display_name: "Duration after which start trip ETA calculation should begin"},
      {request_type: "auto_sequence", value: "1", conf_type: "boolean",display_name: "auto_sequence"},
      {request_type: "send_last_mile_sms", value: "1", conf_type: "boolean",display_name: "Send Last Mile SMS"},
      {request_type: "send_drivers_off_duty", value: "0", conf_type: "boolean",display_name: "Send Drivers Off Duty"},
      {request_type: "reports_download_button", value: '0',display_name: "Report download button", conf_type: "boolean"}]

    new_conf_sequence.each do |conf|
      Configurator.create_with({value: conf[:value], conf_type: conf[:conf_type], options: conf[:options], display_name: conf[:display_name]}).find_or_create_by(request_type: conf[:request_type])
    end
  end
end
